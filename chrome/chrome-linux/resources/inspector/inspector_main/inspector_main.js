import{Settings as e,ObjectWrapper as t,UIString as n}from"../common/common.js";import{Widget as a,UIUtils as s,SettingsUI as i,Utils as o,Toolbar as r,Icon as l,InspectorView as d}from"../ui/ui.js";import{TargetDetachedDialog as c}from"../components/components.js";import{InspectorFrontendHost as g,InspectorFrontendHostAPI as h}from"../host/host.js";import{NetworkPanelIndicator as u}from"../mobile_throttling/mobile_throttling.js";import{Connections as p,SDKModel as m,DebuggerModel as S,ResourceTreeModel as b,ChildTargetManager as _}from"../sdk/sdk.js";class f extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("inspector_main/renderingOptions.css",{enableLegacyPatching:!0}),this._appendCheckbox(ls`Paint flashing`,ls`Highlights areas of the page (green) that need to be repainted. May not be suitable for people prone to photosensitive epilepsy.`,e.Settings.instance().moduleSetting("showPaintRects")),this._appendCheckbox(ls`Layout Shift Regions`,ls`Highlights areas of the page (blue) that were shifted. May not be suitable for people prone to photosensitive epilepsy.`,e.Settings.instance().moduleSetting("showLayoutShiftRegions")),this._appendCheckbox(ls`Layer borders`,ls`Shows layer borders (orange/olive) and tiles (cyan).`,e.Settings.instance().moduleSetting("showDebugBorders")),this._appendCheckbox(ls`Frame Rendering Stats`,ls`Plots frame throughput, dropped frames distribution, and GPU memory.`,e.Settings.instance().moduleSetting("showFPSCounter")),this._appendCheckbox(ls`Scrolling performance issues`,ls`Highlights elements (teal) that can slow down scrolling, including touch & wheel event handlers and other main-thread scrolling situations.`,e.Settings.instance().moduleSetting("showScrollBottleneckRects")),this._appendCheckbox(ls`Highlight ad frames`,ls`Highlights frames (red) detected to be ads.`,e.Settings.instance().moduleSetting("showAdHighlights")),this._appendCheckbox(ls`Hit-test borders`,ls`Shows borders around hit-test regions.`,e.Settings.instance().moduleSetting("showHitTestBorders")),this._appendCheckbox(ls`Disable local fonts`,ls`Disables local() sources in @font-face rules. Requires a page reload to apply.`,e.Settings.instance().moduleSetting("localFontsDisabled")),this._appendCheckbox(ls`Emulate a focused page`,ls`Emulates a focused page.`,e.Settings.instance().moduleSetting("emulatePageFocus")),this.contentElement.createChild("div").classList.add("panel-section-separator"),this._appendSelect(ls`Forces media type for testing print and screen styles`,e.Settings.instance().moduleSetting("emulatedCSSMedia")),this._appendSelect(ls`Forces CSS prefers-color-scheme media feature`,e.Settings.instance().moduleSetting("emulatedCSSMediaFeaturePrefersColorScheme")),this._appendSelect(ls`Forces CSS prefers-reduced-motion media feature`,e.Settings.instance().moduleSetting("emulatedCSSMediaFeaturePrefersReducedMotion")),(()=>{const e="(prefers-reduced-data: reduce)";return window.matchMedia(e).media===e})()&&this._appendSelect(ls`Forces CSS prefers-reduced-data media feature`,e.Settings.instance().moduleSetting("emulatedCSSMediaFeaturePrefersReducedData")),this.contentElement.createChild("div").classList.add("panel-section-separator"),this._appendSelect(ls`Forces vision deficiency emulation`,e.Settings.instance().moduleSetting("emulatedVisionDeficiency")),this.contentElement.createChild("div").classList.add("panel-section-separator"),this._appendCheckbox(ls`Disable AVIF image format`,ls`Requires a page reload to apply and disables caching for image requests.`,e.Settings.instance().moduleSetting("avifFormatDisabled")),this._appendCheckbox(ls`Disable WebP image format`,ls`Requires a page reload to apply and disables caching for image requests.`,e.Settings.instance().moduleSetting("webpFormatDisabled")),this.contentElement.createChild("div").classList.add("panel-section-separator")}_appendCheckbox(e,t,n){const a=s.CheckboxLabel.create(e,!1,t);i.bindCheckbox(a.checkboxElement,n),this.contentElement.appendChild(a)}_appendSelect(e,t){const n=i.createControlForSetting(t,e);n&&this.contentElement.appendChild(n)}}var C=Object.freeze({__proto__:null,RenderingOptionsView:f});class y extends t.ObjectWrapper{async run(){let e=!0;await p.initMainConnection(async()=>{const t=Root.Runtime.queryParam("v8only")?m.Type.Node:m.Type.Frame,a=t===m.Type.Frame&&"sources"===Root.Runtime.queryParam("panel"),s=m.TargetManager.instance().createTarget("main",n.UIString("Main"),t,null,void 0,a);if(e){if(e=!1,a){const e=s.model(S.DebuggerModel);e.isReadyToPause()||await e.once(S.Events.DebuggerIsReadyToPause),e.pause()}s.runtimeAgent().runIfWaitingForDebugger()}},c.TargetDetachedDialog.webSocketConnectionLost),new F,new v,new u.NetworkPanelIndicator,g.InspectorFrontendHostInstance.events.addEventListener(h.Events.ReloadInspectedPage,e=>{const t=e.data;b.ResourceTreeModel.reloadAllPages(t)})}}class F{constructor(){function t(){let t=null;e.Settings.instance().moduleSetting("javaScriptDisabled").get()&&(t=l.Icon.create("smallicon-warning"),t.title=n.UIString("JavaScript is disabled")),d.InspectorView.instance().setPanelIcon("sources",t)}e.Settings.instance().moduleSetting("javaScriptDisabled").addChangeListener(t),t()}}class v{constructor(){this._autoAttachSetting=e.Settings.instance().moduleSetting("autoAttachToCreatedPages"),this._autoAttachSetting.addChangeListener(this._updateAutoAttach,this),this._updateAutoAttach(),this._adBlockEnabledSetting=e.Settings.instance().moduleSetting("network.adBlockingEnabled"),this._adBlockEnabledSetting.addChangeListener(this._update,this),this._emulatePageFocusSetting=e.Settings.instance().moduleSetting("emulatePageFocus"),this._emulatePageFocusSetting.addChangeListener(this._update,this),m.TargetManager.instance().observeTargets(this)}_updateTarget(e){e.type()!==m.Type.Frame||e.parentTarget()||(e.pageAgent().setAdBlockingEnabled(this._adBlockEnabledSetting.get()),e.emulationAgent().setFocusEmulationEnabled(this._emulatePageFocusSetting.get()))}_updateAutoAttach(){g.InspectorFrontendHostInstance.setOpenNewWindowForPopups(this._autoAttachSetting.get())}_update(){for(const e of m.TargetManager.instance().targets())this._updateTarget(e)}targetAdded(e){this._updateTarget(e)}targetRemoved(e){}}_.ChildTargetManager.install();var w=Object.freeze({__proto__:null,InspectorMainImpl:y,ReloadActionDelegate:class{handleAction(e,t){switch(t){case"inspector_main.reload":return b.ResourceTreeModel.reloadAllPages(!1),!0;case"inspector_main.hard-reload":return b.ResourceTreeModel.reloadAllPages(!0),!0}return!1}},FocusDebuggeeActionDelegate:class{handleAction(e,t){return m.TargetManager.instance().mainTarget().pageAgent().bringToFront(),!0}},NodeIndicator:class{constructor(){const e=createElement("div"),t=o.createShadowRootWithCoreStyles(e,{cssFile:"inspector_main/nodeIcon.css",enableLegacyPatching:!0,delegatesFocus:void 0});this._element=t.createChild("div","node-icon"),e.addEventListener("click",()=>g.InspectorFrontendHostInstance.openNodeFrontend(),!1),this._button=new r.ToolbarItem(e),this._button.setTitle(n.UIString("Open dedicated DevTools for Node.js")),m.TargetManager.instance().addEventListener(m.Events.AvailableTargetsChanged,e=>this._update(e.data)),this._button.setVisible(!1),this._update([])}_update(e){const t=!!e.find(e=>"node"===e.type&&!e.attached);this._element.classList.toggle("inactive",!t),t&&this._button.setVisible(!0)}item(){return this._button}},SourcesPanelIndicator:F,BackendSettingsSync:v});export{w as InspectorMain,C as RenderingOptions};
