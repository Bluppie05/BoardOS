import{SDKModel as t,TracingManager as e,TracingModel as i}from"../sdk/sdk.js";import{FileUtils as s,TempFile as a}from"../bindings/bindings.js";import{DateUtilities as n}from"../platform/platform.js";import{InspectorBackend as o}from"../protocol_client/protocol_client.js";import{TimelineLoader as l}from"../timeline/timeline.js";import{Widget as r,ActionRegistry as c,Toolbar as h,UIUtils as p,ViewManager as d}from"../ui/ui.js";class _ extends t.SDKModel{constructor(t){super(t),this._inputAgent=t.inputAgent(),this._eventDispatchTimer=0,this._dispatchEventDataList=[],this._finishCallback=null,this._dispatchingIndex,this._reset()}_reset(){this._lastEventTime=null,this._replayPaused=!1,this._dispatchingIndex=0,window.clearTimeout(this._eventDispatchTimer)}setEvents(t){this._dispatchEventDataList=[];for(const e of t.sortedProcesses())for(const i of e.sortedThreads())this._processThreadEvents(t,i);this._dispatchEventDataList.sort((function(t,e){return t.timestamp-e.timestamp}))}startReplay(t){this._reset(),this._finishCallback=t,this._dispatchEventDataList.length?this._dispatchNextEvent():this._replayStopped()}pause(){window.clearTimeout(this._eventDispatchTimer),this._dispatchingIndex>=this._dispatchEventDataList.length?this._replayStopped():this._replayPaused=!0}resume(){this._replayPaused=!1,this._dispatchingIndex<this._dispatchEventDataList.length&&this._dispatchNextEvent()}_processThreadEvents(t,e){for(const t of e.events())"EventDispatch"===t.name&&this._isValidInputEvent(t.args.data)&&this._dispatchEventDataList.push(t.args.data)}_isValidInputEvent(t){return this._isMouseEvent(t)||this._isKeyboardEvent(t)}_isMouseEvent(t){return!!u.has(t.type)&&("x"in t&&"y"in t)}_isKeyboardEvent(t){return!!g.has(t.type)&&("code"in t&&"key"in t)}_dispatchNextEvent(){const t=this._dispatchEventDataList[this._dispatchingIndex];if(this._lastEventTime=t.timestamp,u.has(t.type)?this._dispatchMouseEvent(t):g.has(t.type)&&this._dispatchKeyEvent(t),++this._dispatchingIndex,this._dispatchingIndex<this._dispatchEventDataList.length){const t=(this._dispatchEventDataList[this._dispatchingIndex].timestamp-this._lastEventTime)/1e3;this._eventDispatchTimer=window.setTimeout(this._dispatchNextEvent.bind(this),t)}else this._replayStopped()}async _dispatchMouseEvent(t){const e=u.get(t.type);if(!e)throw new Error("Could not find mouse event type for eventData "+t.type);const i=m.get(t.button),s={type:e,x:t.x,y:t.y,modifiers:t.modifiers,button:"mousedown"===t.type||"mouseup"===t.type?i:Protocol.Input.MouseButton.None,buttons:t.buttons,clickCount:t.clickCount,deltaX:t.deltaX,deltaY:t.deltaY};await this._inputAgent.invoke_dispatchMouseEvent(s)}async _dispatchKeyEvent(t){const e=g.get(t.type);if(!e)throw new Error("Could not find key event type for eventData "+t.type);const i="keypress"===t.type?t.key[0]:void 0,s={type:e,modifiers:t.modifiers,text:i,unmodifiedText:i?i.toLowerCase():void 0,code:t.code,key:t.key};await this._inputAgent.invoke_dispatchKeyEvent(s)}_replayStopped(){window.clearTimeout(this._eventDispatchTimer),this._reset(),this._finishCallback&&this._finishCallback()}}const u=new Map([["mousedown",Protocol.Input.DispatchMouseEventRequestType.MousePressed],["mouseup",Protocol.Input.DispatchMouseEventRequestType.MouseReleased],["mousemove",Protocol.Input.DispatchMouseEventRequestType.MouseMoved],["wheel",Protocol.Input.DispatchMouseEventRequestType.MouseWheel]]),g=new Map([["keydown",Protocol.Input.DispatchKeyEventRequestType.KeyDown],["keyup",Protocol.Input.DispatchKeyEventRequestType.KeyUp],["keypress",Protocol.Input.DispatchKeyEventRequestType.Char]]),m=new Map([[0,Protocol.Input.MouseButton.Left],[1,Protocol.Input.MouseButton.Middle],[2,Protocol.Input.MouseButton.Right],[3,Protocol.Input.MouseButton.Back],[4,Protocol.Input.MouseButton.Forward]]);t.SDKModel.register(_,t.Capability.Input,!1);var y=Object.freeze({__proto__:null,InputModel:_,MouseEventData:void 0,KeyboardEventData:void 0,EventData:void 0});class v extends r.VBox{constructor(){super(!0),this.registerRequiredCSS("input/inputTimeline.css",{enableLegacyPatching:!0}),this.element.classList.add("inputs-timeline"),this._tracingClient=null,this._tracingModel=null,this._inputModel=null,this._state=b.Idle,this._toggleRecordAction=c.ActionRegistry.instance().action("input.toggle-recording"),this._startReplayAction=c.ActionRegistry.instance().action("input.start-replaying"),this._togglePauseAction=c.ActionRegistry.instance().action("input.toggle-pause");const t=this.contentElement.createChild("div","input-timeline-toolbar-container");this._panelToolbar=new h.Toolbar("input-timeline-toolbar",t),this._panelToolbar.appendToolbarItem(h.Toolbar.createActionButton(this._toggleRecordAction)),this._panelToolbar.appendToolbarItem(h.Toolbar.createActionButton(this._startReplayAction)),this._panelToolbar.appendToolbarItem(h.Toolbar.createActionButton(this._togglePauseAction)),this._clearButton=new h.ToolbarButton(ls`Clear all`,"largeicon-clear"),this._clearButton.addEventListener(h.ToolbarButton.Events.Click,this._reset.bind(this)),this._panelToolbar.appendToolbarItem(this._clearButton),this._panelToolbar.appendSeparator(),this._loadButton=new h.ToolbarButton(Common.UIString("Load profile…"),"largeicon-load"),this._loadButton.addEventListener(h.ToolbarButton.Events.Click,()=>this._selectFileToLoad()),this._saveButton=new h.ToolbarButton(Common.UIString("Save profile…"),"largeicon-download"),this._saveButton.addEventListener(h.ToolbarButton.Events.Click,t=>{this._saveToFile()}),this._panelToolbar.appendSeparator(),this._panelToolbar.appendToolbarItem(this._loadButton),this._panelToolbar.appendToolbarItem(this._saveButton),this._panelToolbar.appendSeparator(),this._createFileSelector(),this._updateControls()}_reset(){this._tracingClient=null,this._tracingModel=null,this._inputModel=null,this._setState(b.Idle)}_createFileSelector(){this._fileSelectorElement&&this._fileSelectorElement.remove(),this._fileSelectorElement=p.createFileSelectorElement(this._loadFromFile.bind(this)),this.element.appendChild(this._fileSelectorElement)}wasShown(){}willHide(){}_setState(t){this._state=t,this._updateControls()}_isAvailableState(){return this._state===b.Idle||this._state===b.ReplayPaused}_updateControls(){this._toggleRecordAction.setToggled(this._state===b.Recording),this._toggleRecordAction.setEnabled(this._isAvailableState()||this._state===b.Recording),this._startReplayAction.setEnabled(this._isAvailableState()&&!!this._tracingModel),this._togglePauseAction.setEnabled(this._state===b.Replaying||this._state===b.ReplayPaused),this._togglePauseAction.setToggled(this._state===b.ReplayPaused),this._clearButton.setEnabled(this._isAvailableState()),this._loadButton.setEnabled(this._isAvailableState()),this._saveButton.setEnabled(this._isAvailableState()&&!!this._tracingModel)}_toggleRecording(){switch(this._state){case b.Recording:this._stopRecording();break;case b.Idle:this._startRecording()}}_startReplay(){this._replayEvents()}_toggleReplayPause(){switch(this._state){case b.Replaying:this._pauseReplay();break;case b.ReplayPaused:this._resumeReplay()}}async _saveToFile(){console.assert(this._state===b.Idle&&this._tracingModel);const t=`InputProfile-${n.toISO8601Compact(new Date)}.json`,e=new s.FileOutputStream;if(!await e.open(t))return;const i=this._tracingModel.backingStorage();await i.writeToStream(e),e.close()}_selectFileToLoad(){this._fileSelectorElement.click()}_loadFromFile(t){console.assert(this._isAvailableState()),this._setState(b.Loading),this._loader=l.TimelineLoader.loadFromFile(t,this),this._createFileSelector()}async _startRecording(){this._setState(b.StartPending),this._tracingClient=new v.TracingClient(t.TargetManager.instance().mainTarget(),this);const e=await this._tracingClient.startRecording();e[o.ProtocolError]?this._recordingFailed(e[o.ProtocolError]):this._setState(b.Recording)}async _stopRecording(){this._setState(b.StopPending),await this._tracingClient.stopRecording(),this._tracingClient=null}async _replayEvents(){this._setState(b.Replaying),await this._inputModel.startReplay(this.replayStopped.bind(this))}_pauseReplay(){this._inputModel.pause(),this._setState(b.ReplayPaused)}_resumeReplay(){this._inputModel.resume(),this._setState(b.Replaying)}loadingStarted(){}loadingProgress(t){}processingStarted(){}loadingComplete(e){e?(this._inputModel=new _(t.TargetManager.instance().mainTarget()),this._tracingModel=e,this._inputModel.setEvents(e),this._setState(b.Idle)):this._reset()}_recordingFailed(t){this._tracingClient=null,this._setState(b.Idle)}replayStopped(){this._setState(b.Idle)}}const b={Idle:Symbol("Idle"),StartPending:Symbol("StartPending"),Recording:Symbol("Recording"),StopPending:Symbol("StopPending"),Replaying:Symbol("Replaying"),ReplayPaused:Symbol("ReplayPaused"),Loading:Symbol("Loading")};var T=Object.freeze({__proto__:null,InputTimeline:v,State:b,ActionDelegate:class{handleAction(t,e){return d.ViewManager.instance().showView("Inputs").then(()=>d.ViewManager.instance().view("Inputs").widget()).then(t=>this._innerHandleAction(t,e)),!0}_innerHandleAction(t,e){switch(e){case"input.toggle-recording":t._toggleRecording();break;case"input.start-replaying":t._startReplay();break;case"input.toggle-pause":t._toggleReplayPause();break;default:console.assert(!1,"Unknown action: "+e)}}},TracingClient:class{constructor(t,s){this._target=t,this._tracingManager=t.model(e.TracingManager),this._client=s;const n=new a.TempFileBackingStorage;this._tracingModel=new i.TracingModel(n),this._tracingCompleteCallback=null}async startRecording(){var t;const e=["devtools.timeline",(t="devtools.timeline.inputs","disabled-by-default-"+t)].join(","),i=await this._tracingManager.start(this,e,"");return i["Protocol.Error"]&&await this._waitForTracingToStop(!1),i}async stopRecording(){this._tracingManager&&this._tracingManager.stop(),await this._waitForTracingToStop(!0),await t.TargetManager.instance().resumeAllTargets(),this._tracingModel.tracingComplete(),this._client.loadingComplete(this._tracingModel)}traceEventsCollected(t){this._tracingModel.addEvents(t)}tracingComplete(){this._tracingCompleteCallback(),this._tracingCompleteCallback=null}tracingBufferUsage(t){}eventsRetrievalProgress(t){}_waitForTracingToStop(t){return new Promise(e=>{this._tracingManager&&t?this._tracingCompleteCallback=e:e()})}}});export{y as InputModel,T as InputTimeline};
