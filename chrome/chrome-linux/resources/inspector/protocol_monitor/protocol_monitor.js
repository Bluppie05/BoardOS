import{SortableDataGrid as e,DataGrid as t}from"../data_grid/data_grid.js";import{InspectorFrontendHost as i}from"../host/host.js";import{InspectorBackend as s}from"../protocol_client/protocol_client.js";import{SDKModel as o,RemoteObject as r}from"../sdk/sdk.js";import{JSONView as n}from"../source_frame/source_frame.js";import{TextUtils as a}from"../text_utils/text_utils.js";import{Widget as d,Toolbar as l,SplitWidget as h,FilterSuggestionBuilder as c,TabbedPane as g,EmptyWidget as b}from"../ui/ui.js";class _ extends d.VBox{constructor(){super(!0),this._nodes=[],this._started=!1,this._startTime=0,this._nodeForId=new Map,this._filter=e=>!0,this._columns=[{id:"method",title:ls`Method`,visible:!0,sortable:!0,hideable:!1,weight:60},{id:"direction",title:ls`Direction`,visible:!1,sortable:!0,hideable:!0,weight:30},{id:"request",title:ls`Request`,visible:!0,sortable:!1,hideable:!0,weight:60},{id:"response",title:ls`Response`,visible:!0,sortable:!1,hideable:!0,weight:60},{id:"timestamp",title:ls`Timestamp`,visible:!1,sortable:!0,hideable:!0,weight:30},{id:"target",title:ls`Target`,visible:!1,sortable:!0,hideable:!0,weight:30}],this.registerRequiredCSS("protocol_monitor/protocolMonitor.css",{enableLegacyPatching:!0});const i=new l.Toolbar("protocol-monitor-toolbar",this.contentElement),s=new l.ToolbarToggle(ls`Record`,"largeicon-start-recording","largeicon-stop-recording");s.addEventListener(l.ToolbarButton.Events.Click,()=>{s.setToggled(!s.toggled()),this._setRecording(s.toggled())}),s.setToggleWithRedColor(!0),i.appendToolbarItem(s),s.setToggled(!0);const o=new l.ToolbarButton(ls`Clear all`,"largeicon-clear");o.addEventListener(l.ToolbarButton.Events.Click,()=>{this._dataGrid.rootNode().removeChildren(),this._nodes=[],this._nodeForId.clear()}),i.appendToolbarItem(o);const r=new h.SplitWidget(!0,!0,"protocol-monitor-panel-split",250);r.show(this.contentElement),this._dataGrid=new e.SortableDataGrid({displayName:ls`Protocol Monitor`,columns:this._columns.map(e=>({id:e.id,title:e.title,sortable:e.sortable,weight:e.weight,titleDOMFragment:void 0,sort:void 0,align:void 0,width:void 0,fixedWidth:void 0,editable:void 0,nonSelectable:void 0,longText:void 0,disclosure:void 0,allowInSortByEvenWhenHidden:void 0,dataType:void 0,defaultWeight:void 0})),editCallback:void 0,deleteCallback:void 0,refreshCallback:void 0}),this._dataGrid.element.style.flex="1",this._infoWidget=new u,r.setMainWidget(this._dataGrid.asWidget()),r.setSidebarWidget(this._infoWidget),this._dataGrid.addEventListener(t.Events.SelectedNode,e=>this._infoWidget.render(e.data.data)),this._dataGrid.addEventListener(t.Events.DeselectedNode,e=>this._infoWidget.render(null)),this._dataGrid.setHeaderContextMenuCallback(this._innerHeaderContextMenu.bind(this)),this._dataGrid.setRowContextMenuCallback(this._innerRowContextMenu.bind(this)),this._dataGrid.addEventListener(t.Events.SortingChanged,this._sortDataGrid.bind(this)),this._dataGrid.setStickToBottom(!0),this._dataGrid.sortNodes(e.SortableDataGrid.NumericComparator.bind(null,"timestamp"),!1),this._updateColumnVisibility();const n=["method","request","response","direction"];this._filterParser=new a.FilterParser(n),this._suggestionBuilder=new c.FilterSuggestionBuilder(n),this._textFilterUI=new l.ToolbarInput(ls`Filter`,"",1,.2,"",this._suggestionBuilder.completions.bind(this._suggestionBuilder)),this._textFilterUI.addEventListener(l.ToolbarInput.Event.TextChanged,e=>{const t=e.data,i=this._filterParser.parse(t);this._filter=e=>{for(const{key:t,text:s,negative:o}of i){if(!s)continue;const i=t?e.data[t]:e.data;if(!i)continue;if(-1!==JSON.stringify(i).toLowerCase().indexOf(s.toLowerCase())===o)return!1}return!0},this._filterNodes()}),i.appendToolbarItem(this._textFilterUI)}_filterNodes(){for(const e of this._nodes)this._filter(e)?e.parent||this._dataGrid.insertChild(e):e.remove()}_innerHeaderContextMenu(e){const t=this._columns.filter(e=>e.hideable);for(const i of t)e.headerSection().appendCheckboxItem(i.title,this._toggleColumnVisibility.bind(this,i),i.visible)}_innerRowContextMenu(e,t){e.defaultSection().appendItem(ls`Filter`,()=>{this._textFilterUI.setValue("method:"+t.data.method,!0)}),e.defaultSection().appendItem(ls`Documentation`,()=>{const[e,s]=t.data.method.split("."),o="sent"===t.data.direction?"method":"event";i.InspectorFrontendHostInstance.openInNewTab(`https://chromedevtools.github.io/devtools-protocol/tot/${e}#${o}-${s}`)})}_toggleColumnVisibility(e){e.visible=!e.visible,this._updateColumnVisibility()}_updateColumnVisibility(){const e=new Set;for(const t of this._columns)t.visible&&e.add(t.id);this._dataGrid.setColumnsVisiblity(e)}_sortDataGrid(){const t=this._dataGrid.sortColumnId();if(!t)return;let i=!0;switch(t){case"method":case"direction":i=!1}const s=i?e.SortableDataGrid.NumericComparator:e.SortableDataGrid.StringComparator;this._dataGrid.sortNodes(s.bind(null,t),!this._dataGrid.isSortOrderAscending())}wasShown(){this._started||(this._started=!0,this._startTime=Date.now(),this._setRecording(!0))}_setRecording(e){const t=s.test;e?(t.onMessageSent=this._messageSent.bind(this),t.onMessageReceived=this._messageReceived.bind(this)):(t.onMessageSent=null,t.onMessageReceived=null)}_targetToString(e){return e?e.decorateLabel(`${e.name()} ${e===o.TargetManager.instance().mainTarget()?"":e.id()}`):""}_messageReceived(e,t){if("id"in e){const t=this._nodeForId.get(e.id);if(!t)return;if(t.data.response=e.result||e.error,t.hasError=!!e.error,t.refresh(),this._dataGrid.selectedNode===t){const e=t.data;this._infoWidget.render(e)}return}const i=t,s=new m({method:e.method,direction:"received",response:e.params,timestamp:Date.now()-this._startTime,request:"",target:this._targetToString(i)});this._nodes.push(s),this._filter(s)&&this._dataGrid.insertChild(s)}_messageSent(e,t){const i=t,s=new m({method:e.method,direction:"sent",request:e.params,timestamp:Date.now()-this._startTime,response:"(pending)",id:e.id,target:this._targetToString(i)});this._nodeForId.set(e.id,s),this._nodes.push(s),this._filter(s)&&this._dataGrid.insertChild(s)}}class m extends e.SortableDataGridNode{constructor(e){super(e),this.hasError=!1}createCell(e){const t=()=>{const t=this.createTD(e),i=r.RemoteObject.fromLocalObject(this.data[e]);return t.textContent=i.description?i.description.trimEndWithMaxLength(50):"",t.classList.add("source-code"),t};switch(e){case"response":if(!this.data[e]&&"send"===this.data.direction){const t=this.createTD(e);return t.textContent="(pending)",t}return t();case"request":return t();case"timestamp":{const t=this.createTD(e);return t.textContent=ls`${this.data[e]} ms`,t}}return super.createCell(e)}element(){const e=super.element();return e.classList.toggle("protocol-message-sent","sent"===this.data.direction),e.classList.toggle("protocol-message-received","sent"!==this.data.direction),e.classList.toggle("error",this.hasError),e}}class u extends d.VBox{constructor(){super(),this._tabbedPane=new g.TabbedPane,this._tabbedPane.appendTab("request","Request",new d.Widget),this._tabbedPane.appendTab("response","Response",new d.Widget),this._tabbedPane.show(this.contentElement),this._tabbedPane.selectTab("response"),this.render(null)}render(e){const t=e&&"sent"===e.direction;if(this._tabbedPane.setTabEnabled("request",!!t),!e)return this._tabbedPane.changeTabView("request",new b.EmptyWidget(ls`No message selected`)),void this._tabbedPane.changeTabView("response",new b.EmptyWidget(ls`No message selected`));t||this._tabbedPane.selectTab("response"),this._tabbedPane.changeTabView("request",n.JSONView.createViewSync(e.request)),this._tabbedPane.changeTabView("response",n.JSONView.createViewSync(e.response))}}var p=Object.freeze({__proto__:null,ProtocolMonitorImpl:_,ProtocolNode:m,InfoWidget:u,ProtocolColumnConfig:void 0});export{p as ProtocolMonitor};
