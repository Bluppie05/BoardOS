import{UIString as e,ObjectWrapper as t}from"../common/common.js";import{InspectorFrontendHost as s,InspectorFrontendHostAPI as n,userMetrics as o,UserMetrics as i}from"../host/host.js";import{Panel as r,Widget as a,XLink as c,UIUtils as d,ListWidget as l}from"../ui/ui.js";import{TargetDetachedDialog as h}from"../components/components.js";import{Connections as g,SDKModel as _}from"../sdk/sdk.js";class v extends r.Panel{constructor(){super("node-connection"),this.registerRequiredCSS("node_main/nodeConnectionsPanel.css",{enableLegacyPatching:!0}),this.contentElement.classList.add("node-panel");const e=this.contentElement.createChild("div","node-panel-center");e.createChild("img","node-panel-logo").src="https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg",s.InspectorFrontendHostInstance.events.addEventListener(n.Events.DevicesDiscoveryConfigChanged,this._devicesDiscoveryConfigChanged,this),this._config,this.contentElement.tabIndex=0,this.setDefaultFocusedElement(this.contentElement),s.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!1),s.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!0),this._networkDiscoveryView=new p(e=>{this._config.networkDiscoveryConfig=e,s.InspectorFrontendHostInstance.setDevicesDiscoveryConfig(this._config)}),this._networkDiscoveryView.show(e)}_devicesDiscoveryConfigChanged(e){this._config=e.data,this._networkDiscoveryView.discoveryConfigChanged(this._config.networkDiscoveryConfig)}}class p extends a.VBox{constructor(t){super(),this._callback=t,this.element.classList.add("network-discovery-view");const s=this.element.createChild("div","network-discovery-footer"),n=c.XLink.create("https://nodejs.org/en/docs/inspector/",ls`Node.js debugging guide`);s.appendChild(d.formatLocalized("Specify network endpoint and DevTools will connect to it automatically. Read %s to learn more.",[n])),this._list=new l.ListWidget(this),this._list.registerRequiredCSS("node_main/nodeConnectionsPanel.css",{enableLegacyPatching:!0}),this._list.element.classList.add("network-discovery-list");const o=document.createElement("div");o.classList.add("network-discovery-list-empty"),o.textContent=e.UIString("No connections specified"),this._list.setEmptyPlaceholder(o),this._list.show(this.element),this._editor=null;const i=d.createTextButton(e.UIString("Add connection"),this._addNetworkTargetButtonClicked.bind(this),"add-network-target-button",!0);this.element.appendChild(i),this._networkDiscoveryConfig=[],this.element.classList.add("node-frontend")}_update(){const e=this._networkDiscoveryConfig.map(e=>e.address);this._callback.call(null,e)}_addNetworkTargetButtonClicked(){this._list.addNewItem(this._networkDiscoveryConfig.length,{address:"",port:""})}discoveryConfigChanged(e){this._networkDiscoveryConfig=[],this._list.clear();for(const t of e){const e={address:t,port:""};this._networkDiscoveryConfig.push(e),this._list.appendItem(e,!0)}}renderItem(e,t){const s=document.createElement("div");return s.classList.add("network-discovery-list-item"),s.createChild("div","network-discovery-value network-discovery-address").textContent=e.address,s}removeItemRequested(e,t){this._networkDiscoveryConfig.splice(t,1),this._list.removeItem(t),this._update()}commitEdit(e,t,s){e.address=t.control("address").value.trim(),s&&this._networkDiscoveryConfig.push(e),this._update()}beginEdit(e){const t=this._createEditor();return t.control("address").value=e.address,t}_createEditor(){if(this._editor)return this._editor;const e=new l.Editor;this._editor=e;const t=e.contentElement().createChild("div","network-discovery-edit-row"),s=e.createInput("address","text",ls`Network address (e.g. localhost:9229)`,(function(e,t,s){const n=s.value.trim().match(/^([a-zA-Z0-9\.\-_]+):(\d+)$/);if(!n)return{valid:!1};return{valid:parseInt(n[2],10)<=65535}}));return t.createChild("div","network-discovery-value network-discovery-address").appendChild(s),e}}var m=Object.freeze({__proto__:null,NodeConnectionsPanel:v,NodeConnectionsView:p});class C extends t.ObjectWrapper{async run(){o.actionTaken(i.Action.ConnectToNodeJSFromFrontend),g.initMainConnection(async()=>{_.TargetManager.instance().createTarget("main",e.UIString("Main"),_.Type.Browser,null).setInspectedURL("Node.js")},h.TargetDetachedDialog.webSocketConnectionLost)}}class u extends _.SDKModel{constructor(e){super(e),this._targetManager=e.targetManager(),this._parentTarget=e,this._targetAgent=e.targetAgent(),this._childTargets=new Map,this._childConnections=new Map,e.registerTargetDispatcher(this),this._targetAgent.invoke_setDiscoverTargets({discover:!0}),s.InspectorFrontendHostInstance.events.addEventListener(n.Events.DevicesDiscoveryConfigChanged,this._devicesDiscoveryConfigChanged,this),s.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!1),s.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!0)}_devicesDiscoveryConfigChanged(e){const t=e.data,s=[];for(const e of t.networkDiscoveryConfig){const t=e.split(":"),n=parseInt(t[1],10);t[0]&&n&&s.push({host:t[0],port:n})}this._targetAgent.invoke_setRemoteLocations({locations:s})}dispose(){s.InspectorFrontendHostInstance.events.removeEventListener(n.Events.DevicesDiscoveryConfigChanged,this._devicesDiscoveryConfigChanged,this);for(const e of this._childTargets.keys())this.detachedFromTarget({sessionId:e})}targetCreated({targetInfo:e}){"node"!==e.type||e.attached||this._targetAgent.invoke_attachToTarget({targetId:e.targetId,flatten:!1})}targetInfoChanged(e){}targetDestroyed(e){}attachedToTarget({sessionId:e,targetInfo:t}){const s=ls`Node.js: ${t.url}`,n=new f(this._targetAgent,e);this._childConnections.set(e,n);const o=this._targetManager.createTarget(t.targetId,s,_.Type.Node,this._parentTarget,void 0,void 0,n);this._childTargets.set(e,o),o.runtimeAgent().invoke_runIfWaitingForDebugger()}detachedFromTarget({sessionId:e}){const t=this._childTargets.get(e);t&&t.dispose("target terminated"),this._childTargets.delete(e),this._childConnections.delete(e)}receivedMessageFromTarget({sessionId:e,message:t}){const s=this._childConnections.get(e),n=s?s._onMessage:null;n&&n.call(null,t)}targetCrashed(e){}}class f{constructor(e,t){this._targetAgent=e,this._sessionId=t,this._onMessage=null,this._onDisconnect=null}setOnMessage(e){this._onMessage=e}setOnDisconnect(e){this._onDisconnect=e}sendRawMessage(e){this._targetAgent.invoke_sendMessageToTarget({message:e,sessionId:this._sessionId})}async disconnect(){this._onDisconnect&&this._onDisconnect.call(null,"force disconnect"),this._onDisconnect=null,this._onMessage=null,await this._targetAgent.invoke_detachFromTarget({sessionId:this._sessionId})}}_.SDKModel.register(u,_.Capability.Target,!0);var w=Object.freeze({__proto__:null,NodeMainImpl:C,NodeChildTargetManager:u,NodeConnection:f});export{m as NodeConnectionsPanel,w as NodeMain};
